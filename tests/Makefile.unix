# Makefile for building on *NIX systems.

SHELL = /bin/sh 

#### Start of system configuration section ####

# Source directory.
srcdir = .

# Armadillo library.
ifeq ($(shell uname -s), macos)
	ARMA_INC_PATH = -I/usr/local/include
	ARMA_LIB_PATH = -L/usr/local/lib
	ARMALIB = -larmadillo -framework Accelerate
else
	ARMA_INC_PATH = 
	ARMA_LIB_PATH = 
	ARMALIB = -larmadillo
endif

# Compiler settings.
CXX      = @cxx@
CXXFLAGS = @cxxflags@
CPPFLAGS = -I$(srcdir) -I.. $(ARMA_INC_PATH) 
DEPFLAGS = @cxx_depflag@
LDFLAGS  = -L.. $(ARMA_LIB_PATH) 
DEFS     = @defs@ 

FC      = @fc@
FCFLAGS = @fcflags@

.SUFFIXES:
.SUFFIXES: .cpp .h .d .o

#### End of system configuration section ####

SRC  = 	test_input.cpp test_ptable.cpp test_datum.cpp \
	test_molecule_io.cpp test_molecule.cpp test_molrot.cpp \
	test_pdist_matrix.cpp test_zmatrix.cpp test_molvib.cpp
OBJ  = 	$(SRC:.cpp=.o)
EXE1 = 	$(SRC:.cpp=.x) 

LIBS = -lchem $(ARMALIB)

.PHONY: all
all:	$(EXE1) 

.PHONY: clean
clean:
	rm -f *.o *.x *.gch 

.PHONY: distclean
distclean: clean
	rm -f *~ *.d TAGS *.mod *.stackdump 

.PHONY: TAGS
TAGS: 
	etags *.cpp *.h

%.x: %.o
	$(CXX) $(CXXFLAGS) $(DEFS) -o $@ $^ $(LDFLAGS) $(LIBS)

%.o : %.cpp
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(DEFS) -c $< 

%.d : %.cpp
	$(CXX) $(DEPFLAGS) $(CPPFLAGS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

-include $(SRC:.cpp=.d)

