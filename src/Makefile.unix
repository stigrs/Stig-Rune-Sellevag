# Makefile for building on *NIX systems.

SHELL = /bin/sh 

#### Start of system configuration section ####

# Armadillo library.
ARMA_INCLUDE = /usr/local/include
ARMA_LIB     = /usr/local/lib

# Source directory.
srcdir = .

# Compiler settings.
CXX      = @cxx@
CXXFLAGS = @cxxflags@
CPPFLAGS = -I$(srcdir) -I.. -I$(ARMA_INCLUDE) @cppflags@
DEPFLAGS = @cxx_depflag@
LDFLAGS  = -L.. -L$(ARMA_LIB) @ldflags@ 
DEFS     = @defs@ 

FC      = @fc@
FCFLAGS = @fcflags@

# Set LAPACK library.
ifdef MKL_ROOT
	MKLROOT = $(MKL_ROOT)
endif
ifdef MKLROOT
	DEFS     += -DUSE_MKL_HEADERS
	CPPFLAGS += -I$(MKLROOT)/include
	ifeq ($(shell uname -m), x86_64)
		LDFLAGS  += -L$(MKLROOT)/lib/intel64
		ARMALIB = -lmkl_intel_ilp64 -lmkl_sequential -lmkl_core \
				  -lpthread -lm 
	else
		LDFLAGS  += -L$(MKLROOT)/lib/ia32
		ARMALIB = -lmkl_intel -lmkl_sequential -lmkl_core \
				  -lpthread -lm 
	endif
else
	ARMALIB = -larmadillo
endif

.SUFFIXES:
.SUFFIXES: .cpp .h .d .o

#### End of system configuration section ####

SRC  = 	molrot.cpp zmatxyz.cpp
OBJ  = 	$(SRC:.cpp=.o)
EXE1 = 	$(SRC:.cpp=.x) 

LIBS = -lchem $(ARMALIB)

.PHONY: all
all:	$(EXE1) 

.PHONY: clean
clean:
	rm -f *.o *.x *.gch 

.PHONY: distclean
distclean: clean
	rm -f *~ *.d TAGS *.mod *.stackdump 

.PHONY: TAGS
TAGS: 
	etags *.cpp *.h

%.x: %.o
	$(CXX) $(CXXFLAGS) $(DEFS) $(LDFLAGS) -o $@ $^ $(LIBS)

%.o : %.cpp
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) $(DEFS) -c $< 

%.d : %.cpp
	$(CXX) $(DEPFLAGS) $(CPPFLAGS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

-include $(SRC:.cpp=.d)

